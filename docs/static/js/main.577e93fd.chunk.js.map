{"version":3,"sources":["contexts/MetaContext.js","App.js","serviceWorker.js","index.js","lib/drawThreeGeo.js","components/GlobalScene.js"],"names":["MetaContext","React","createContext","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","collapsed","metadataContext","loading","that","localforage","config","name","version","storeName","description","ready","then","fetchMetaData","catch","e","console","log","setState","react_default","a","createElement","Provider","value","BrowserRouter","style","position","top","width","height","textAlign","paddingTop","paddingBottom","react_spinners","color","GlobalScene","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister","drawThreeGeo","THREE","json","radius","shape","materalOptions","container","scene","x_values","y_values","z_values","json_geom","geometry_array","type","push","geometry","feature_num","features","length","Error","geom_num","geometries","createGeometryArray","convertCoordinates","conversionFunctionName","convertToSphereCoords","convertToPlaneCoords","getConversionFunctionName","coordinate_array","coordinates","drawParticle","point_num","createCoordinateArray","drawLine","segment_num","polygon_num","feature","temp_array","interpolation_array","point1","point2","needsInterpolation","interpolatePoints","inter_point_num","lon1","lat1","lon2","lat2","lon_distance","Math","abs","lat_distance","getMidpoint","coordinates_array","sphere_radius","lon","lat","cos","PI","sin","x","y","z","options","particle_geom","Geometry","vertices","Vector3","particle_material","ParticleSystemMaterial","particle","ParticleSystem","add","clearArrays","line_geom","object_geometry","values_axis1","values_axis2","values_axis3","i","createVertexForEachPoint","line_material","LineBasicMaterial","line","Line","__webpack_require__","d","__webpack_exports__","BufferReader","require","TrackballControls","_Users_karl_Desktop_globalweather_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_karl_Desktop_globalweather_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_karl_Desktop_globalweather_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","controls","update","renderScene","renderer","camera","colorBuckets","mm","rgb","Infinity","_this2","mount","clientWidth","clientHeight","antialias","setClearColor","setSize","appendChild","domElement","planet","sphereGeometry","material","wireframe","transparent","sphere","rotation","noPan","minDistance","maxDistance","axios","all","get","responseType","timeout","spread","geoLines","statesResults","countryResults","rainfallResults","j","box","boxMaterial","applyMatrix","makeTranslation","boxHeight","rainfallReader","Buffer","data","latCount","nextUInt32BE","latArray","Array","nextFloatBE","longCount","longArray","Float32Array","colors","_","cloneDeep","comparisonFunc","colorBucket","curMM","cur","offset","find","northWest","northEast","southEast","southWest","addAttribute","vertexColors","mesh","filter","properties","removeChild","_this3","react__WEBPACK_IMPORTED_MODULE_5___default","ref","left","fontSize","right","bottom","href","map","display","marginRight","marginLeft","backgroundColor"],"mappings":"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","file":"static/js/main.577e93fd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const MetaContext = React.createContext({});\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport localforage from 'localforage'\nimport { ScaleLoader } from 'react-spinners';\nimport { MetaContext } from \"./contexts/MetaContext.js\";\nimport GlobalScene from \"./components/GlobalScene.js\";\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n        collapsed: true,\n        metadataContext : {\n           loading: true,\n        }\n    }\n  }\n\n  componentDidMount() {\n    var that = this;\n    localforage.config({\n        name        : 'worldevents',\n        version     : 1.0,\n        storeName   : 'worldevents',\n        description : 'worldevents'\n    });\n\n    localforage.ready().then(function() {\n        that.fetchMetaData();\n    }).catch(function (e) {\n        console.log(e);\n    });\n  }\n\n  fetchMetaData(){\n      var metaData = {\n        loading: false\n      }\n      this.setState({\n        metadataContext: metaData\n      });\n\n  }\n\n  render() {\n    return (\n      <MetaContext.Provider value={this.state.metadataContext}>\n        <Router>\n            {\n              this.state.metadataContext.loading ?\n              <div style={{\n                position: 'absolute',\n                top: 0,\n                width: '100%',\n                height: 350,\n                textAlign: 'center',\n                paddingTop: 150,\n                paddingBottom: 30 }}>\n                <ScaleLoader\n                  color={'#FFF'}\n                  loading={ true }\n                  />\n              </div>\n              :\n              <GlobalScene style={{height: '500', width: '100%'}}/>\n            }\n        </Router>\n      </MetaContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* Draw GeoJSON\r\n\r\nCopyright (c) 2014, Jared Dominguez All rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n\r\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nIterates through the latitude and longitude values, converts the values to XYZ coordinates,\r\nand draws the geoJSON geometries.\r\n\r\n*/\r\n\r\nexport default function drawThreeGeo(THREE, json, radius, shape, materalOptions, container) {\r\n    container = container || window.scene;\r\n\r\n    var x_values = [];\r\n    var y_values = [];\r\n    var z_values = [];\r\n\r\n    var json_geom = createGeometryArray(json);\r\n    //An array to hold the feature geometries.\r\n    var convertCoordinates = getConversionFunctionName(shape);\r\n    //Whether you want to convert to spherical or planar coordinates.\r\n    var coordinate_array = [];\r\n    //Re-usable array to hold coordinate values. This is necessary so that you can add\r\n    //interpolated coordinates. Otherwise, lines go through the sphere instead of wrapping around.\r\n\r\n    for (var geom_num = 0; geom_num < json_geom.length; geom_num++) {\r\n\r\n        if (json_geom[geom_num].type == 'Point') {\r\n            convertCoordinates(json_geom[geom_num].coordinates, radius);\r\n            drawParticle(x_values[0], y_values[0], z_values[0], materalOptions);\r\n\r\n        } else if (json_geom[geom_num].type == 'MultiPoint') {\r\n            for (var point_num = 0; point_num < json_geom[geom_num].coordinates.length; point_num++) {\r\n                convertCoordinates(json_geom[geom_num].coordinates[point_num], radius);\r\n                drawParticle(x_values[0], y_values[0], z_values[0], materalOptions);\r\n            }\r\n\r\n        } else if (json_geom[geom_num].type == 'LineString') {\r\n            coordinate_array = createCoordinateArray(json_geom[geom_num].coordinates);\r\n\r\n            for (var point_num = 0; point_num < coordinate_array.length; point_num++) {\r\n                convertCoordinates(coordinate_array[point_num], radius);\r\n            }\r\n            drawLine(x_values, y_values, z_values, materalOptions);\r\n\r\n        } else if (json_geom[geom_num].type == 'Polygon') {\r\n            for (var segment_num = 0; segment_num < json_geom[geom_num].coordinates.length; segment_num++) {\r\n                coordinate_array = createCoordinateArray(json_geom[geom_num].coordinates[segment_num]);\r\n\r\n                for (var point_num = 0; point_num < coordinate_array.length; point_num++) {\r\n                    convertCoordinates(coordinate_array[point_num], radius);\r\n                }\r\n                drawLine(x_values, y_values, z_values, materalOptions);\r\n            }\r\n\r\n        } else if (json_geom[geom_num].type == 'MultiLineString') {\r\n            for (var segment_num = 0; segment_num < json_geom[geom_num].coordinates.length; segment_num++) {\r\n                coordinate_array = createCoordinateArray(json_geom[geom_num].coordinates[segment_num]);\r\n\r\n                for (var point_num = 0; point_num < coordinate_array.length; point_num++) {\r\n                    convertCoordinates(coordinate_array[point_num], radius);\r\n                }\r\n                drawLine(x_values, y_values, z_values, materalOptions);\r\n            }\r\n\r\n        } else if (json_geom[geom_num].type == 'MultiPolygon') {\r\n            for (var polygon_num = 0; polygon_num < json_geom[geom_num].coordinates.length; polygon_num++) {\r\n                for (var segment_num = 0; segment_num < json_geom[geom_num].coordinates[polygon_num].length; segment_num++) {\r\n                    coordinate_array = createCoordinateArray(json_geom[geom_num].coordinates[polygon_num][segment_num]);\r\n\r\n                    for (var point_num = 0; point_num < coordinate_array.length; point_num++) {\r\n                        convertCoordinates(coordinate_array[point_num], radius);\r\n                    }\r\n                    drawLine(x_values, y_values, z_values, materalOptions);\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error('The geoJSON is not valid.');\r\n        }\r\n    }\r\n\r\n    function createGeometryArray(json) {\r\n        var geometry_array = [];\r\n\r\n        if (json.type == 'Feature') {\r\n            geometry_array.push(json.geometry);\r\n        } else if (json.type == 'FeatureCollection') {\r\n            for (var feature_num = 0; feature_num < json.features.length; feature_num++) {\r\n                geometry_array.push(json.features[feature_num].geometry);\r\n            }\r\n        } else if (json.type == 'GeometryCollection') {\r\n            for (var geom_num = 0; geom_num < json.geometries.length; geom_num++) {\r\n                geometry_array.push(json.geometries[geom_num]);\r\n            }\r\n        } else {\r\n            throw new Error('The geoJSON is not valid.');\r\n        }\r\n        //alert(geometry_array.length);\r\n        return geometry_array;\r\n    }\r\n\r\n    function getConversionFunctionName(shape) {\r\n        var conversionFunctionName;\r\n\r\n        if (shape == 'sphere') {\r\n            conversionFunctionName = convertToSphereCoords;\r\n        } else if (shape == 'plane') {\r\n            conversionFunctionName = convertToPlaneCoords;\r\n        } else {\r\n            throw new Error('The shape that you specified is not valid.');\r\n        }\r\n        return conversionFunctionName;\r\n    }\r\n\r\n    function createCoordinateArray(feature) {\r\n        //Loop through the coordinates and figure out if the points need interpolation.\r\n        var temp_array = [];\r\n        var interpolation_array = [];\r\n\r\n        for (var point_num = 0; point_num < feature.length; point_num++) {\r\n            var point1 = feature[point_num];\r\n            var point2 = feature[point_num - 1];\r\n\r\n            if (point_num > 0) {\r\n                if (needsInterpolation(point2, point1)) {\r\n                    interpolation_array = [point2, point1];\r\n                    interpolation_array = interpolatePoints(interpolation_array);\r\n\r\n                    for (var inter_point_num = 0; inter_point_num < interpolation_array.length; inter_point_num++) {\r\n                        temp_array.push(interpolation_array[inter_point_num]);\r\n                    }\r\n                } else {\r\n                    temp_array.push(point1);\r\n                }\r\n            } else {\r\n                temp_array.push(point1);\r\n            }\r\n        }\r\n        return temp_array;\r\n    }\r\n\r\n    function needsInterpolation(point2, point1) {\r\n        //If the distance between two latitude and longitude values is\r\n        //greater than five degrees, return true.\r\n        var lon1 = point1[0];\r\n        var lat1 = point1[1];\r\n        var lon2 = point2[0];\r\n        var lat2 = point2[1];\r\n        var lon_distance = Math.abs(lon1 - lon2);\r\n        var lat_distance = Math.abs(lat1 - lat2);\r\n\r\n        if (lon_distance > 5 || lat_distance > 5) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function interpolatePoints(interpolation_array) {\r\n        //This function is recursive. It will continue to add midpoints to the\r\n        //interpolation array until needsInterpolation() returns false.\r\n        var temp_array = [];\r\n        var point1, point2;\r\n\r\n        for (var point_num = 0; point_num < interpolation_array.length - 1; point_num++) {\r\n            point1 = interpolation_array[point_num];\r\n            point2 = interpolation_array[point_num + 1];\r\n\r\n            if (needsInterpolation(point2, point1)) {\r\n                temp_array.push(point1);\r\n                temp_array.push(getMidpoint(point1, point2));\r\n            } else {\r\n                temp_array.push(point1);\r\n            }\r\n        }\r\n\r\n        temp_array.push(interpolation_array[interpolation_array.length - 1]);\r\n\r\n        if (temp_array.length > interpolation_array.length) {\r\n            temp_array = interpolatePoints(temp_array);\r\n        } else {\r\n            return temp_array;\r\n        }\r\n        return temp_array;\r\n    }\r\n\r\n    function getMidpoint(point1, point2) {\r\n        var midpoint_lon = (point1[0] + point2[0]) / 2;\r\n        var midpoint_lat = (point1[1] + point2[1]) / 2;\r\n        var midpoint = [midpoint_lon, midpoint_lat];\r\n\r\n        return midpoint;\r\n    }\r\n\r\n    function convertToSphereCoords(coordinates_array, sphere_radius) {\r\n        var lon = coordinates_array[0];\r\n        var lat = coordinates_array[1];\r\n\r\n        x_values.push(Math.cos(lat * Math.PI / 180) * Math.cos(lon * Math.PI / 180) * sphere_radius);\r\n        y_values.push(Math.cos(lat * Math.PI / 180) * Math.sin(lon * Math.PI / 180) * sphere_radius);\r\n        z_values.push(Math.sin(lat * Math.PI / 180) * sphere_radius);\r\n    }\r\n\r\n    function convertToPlaneCoords(coordinates_array, radius) {\r\n        var lon = coordinates_array[0];\r\n        var lat = coordinates_array[1];\r\n\r\n        z_values.push((lat / 180) * radius);\r\n        y_values.push((lon / 180) * radius);\r\n    }\r\n\r\n    function drawParticle(x, y, z, options) {\r\n        var particle_geom = new THREE.Geometry();\r\n        particle_geom.vertices.push(new THREE.Vector3(x, y, z));\r\n\r\n        var particle_material = new THREE.ParticleSystemMaterial(options);\r\n\r\n        var particle = new THREE.ParticleSystem(particle_geom, particle_material);\r\n        container.add(particle);\r\n\r\n        clearArrays();\r\n    }\r\n\r\n    function drawLine(x_values, y_values, z_values, options) {\r\n        var line_geom = new THREE.Geometry();\r\n        createVertexForEachPoint(line_geom, x_values, y_values, z_values);\r\n\r\n        var line_material = new THREE.LineBasicMaterial(options);\r\n        var line = new THREE.Line(line_geom, line_material);\r\n        container.add(line);\r\n\r\n        clearArrays();\r\n    }\r\n\r\n    function createVertexForEachPoint(object_geometry, values_axis1, values_axis2, values_axis3) {\r\n        for (var i = 0; i < values_axis1.length; i++) {\r\n            object_geometry.vertices.push(new THREE.Vector3(values_axis1[i],\r\n                values_axis2[i], values_axis3[i]));\r\n        }\r\n    }\r\n\r\n    function clearArrays() {\r\n        x_values.length = 0;\r\n        y_values.length = 0;\r\n        z_values.length = 0;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as THREE from 'three';\r\nimport axios from 'axios';\r\nimport drawThreeGeo from '../lib/drawThreeGeo.js';\r\nimport _ from 'lodash';\r\nvar BufferReader = require('buffer-reader');\r\n\r\nvar TrackballControls = require('three-trackballcontrols');\r\n\r\nclass GlobalScene extends Component{\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        colorBuckets : [\r\n            { mm: 24, rgb: [0.878431,0.878431,0.878431  ] },\r\n            { mm: 74, rgb: [0.6901,0.6901,0.6901  ] },\r\n            { mm: 124, rgb: [ 0.51764, 0.51764, 0.51764  ] },\r\n            { mm: 224, rgb: [  0.7137, 0.35294, 0.35294 ] },\r\n            { mm: 274, rgb: [ 0.7333,0.6431,0.5176  ] },\r\n            { mm: 374, rgb: [ 1.0, 0.7333, 0.3843  ] },\r\n            { mm: 474, rgb: [ 1.0,1.0, 0.2666 ] },\r\n            { mm: 724, rgb: [0.5137, 1.0, 0.5294 ] },\r\n            { mm: 974, rgb: [0.1411,1.0,0.0235  ] },\r\n            { mm: 1474, rgb: [0.2196,0.7529,0.1686  ] },\r\n            { mm: 2474, rgb: [ 0.0862,0.53333,0.0235 ] },\r\n            { mm: 4974, rgb: [0.0549,0.3686,0.2980  ] },\r\n            { mm: 7474, rgb: [0.9843,0.0,1.0  ] },\r\n            { mm: 10004, rgb: [0.4235,0.0,0.4235  ] },\r\n            { mm: Infinity, rgb: [0.0509,0.44705,1.0] }\r\n        ]\r\n    }\r\n  }\r\n\r\n  convertToSphereCoords(coordinates_array, sphere_radius) {\r\n        var lon = coordinates_array[0];\r\n        var lat = coordinates_array[1];\r\n\r\n        return {\r\n          x: Math.cos(lat * Math.PI / 180) * Math.cos(lon * Math.PI / 180) * sphere_radius,\r\n          y: Math.cos(lat * Math.PI / 180) * Math.sin(lon * Math.PI / 180) * sphere_radius,\r\n          z: Math.sin(lat * Math.PI / 180) * sphere_radius\r\n        }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    const width = this.mount.clientWidth;\r\n    const height = this.mount.clientHeight;\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(55,width / height, 0.01, 100);\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      antialias: true\r\n    });\r\n    this.renderer.setClearColor('#111')\r\n    this.renderer.setSize(width, height)\r\n    this.mount.appendChild(this.renderer.domElement)\r\n    this.planet = new THREE.Object3D();\r\n\r\n    this.sphereGeometry = new THREE.SphereGeometry(10, 128, 128);\r\n    this.material = new THREE.MeshBasicMaterial({\r\n        color: 0xFFFFFF,\r\n        wireframe: false,\r\n        transparent: false,\r\n    });\r\n    this.sphere= new THREE.Mesh(this.sphereGeometry, this.material);\r\n    this.planet.add(this.sphere);\r\n    this.planet.rotation.x = -(90)*0.01745329251;\r\n\r\n    this.camera.position.z = 15;\r\n    this.scene.add(this.planet);\r\n    this.controls = new TrackballControls(this.camera, this.renderer.domElement);\r\n\r\n    this.controls.noPan = true;\r\n  \tthis.controls.minDistance = 11;\r\n  \tthis.controls.maxDistance = 25;\r\n\r\n    var that = this;\r\n\r\n    axios.all([\r\n      axios.get('data/ne_50m_geographic_lines.json'),\r\n      axios.get('data/ne_50m_admin_1_states_provinces_lines.json'),\r\n      axios.get('data/ne_50m_admin_0_countries.json'),\r\n      axios.get('data/rainfallannual.out', { responseType: 'arraybuffer', timeout: 20000}),\r\n    ]).then(axios.spread( (geoLines, statesResults, countryResults, rainfallResults) => {\r\n\r\n      var boxHeight = 3;\r\n      that.box = new THREE.BoxGeometry( 0.05,0.05,boxHeight );\r\n      that.boxMaterial = new THREE.MeshBasicMaterial( { color: 0x00ff00,wireframe: true } );\r\n      that.box.applyMatrix( new THREE.Matrix4().makeTranslation( 0.025, 0.025,boxHeight/2.0+10) );\r\n\r\n      var i;\r\n      var j;\r\n\r\n      var rainfallReader = new BufferReader(new Buffer(rainfallResults.data));\r\n\r\n      var latCount = rainfallReader.nextUInt32BE();\r\n      var latArray = new Array(latCount);\r\n      for(i = 0 ; i < latArray.length;i++){\r\n        latArray[i] = rainfallReader.nextFloatBE()\r\n      }\r\n      var longCount = rainfallReader.nextUInt32BE();\r\n      var longArray = new Array(longCount);\r\n      for(j = 0; j < longArray.length; j++){\r\n        longArray[j] = rainfallReader.nextFloatBE()\r\n      }\r\n\r\n      var geometry = new THREE.BufferGeometry();\r\n      var vertices = new Float32Array(latCount*longCount*3*6);\r\n      var colors = new Float32Array(latCount*longCount*3*6);\r\n\r\n      var colorBuckets = _.cloneDeep(this.state.colorBuckets);\r\n\r\n      var comparisonFunc = function(colorBucket){\r\n         return curMM < colorBucket.mm;\r\n      }\r\n\r\n      var cur = 0;\r\n      for(i  = 0 ; i < latArray.length;i++){\r\n        for(j = 0; j < longArray.length; j++){\r\n          var offset = cur*3*6;\r\n\r\n          var curMM = rainfallReader.nextFloatBE()\r\n          var matchingRange = _.find(colorBuckets, comparisonFunc);\r\n          var color = matchingRange.rgb;\r\n          var lat = latArray[i];\r\n          var lon = longArray[j];\r\n\r\n          var northWest = that.convertToSphereCoords([lon-0.25, lat+0.25], 10.01);\r\n          var northEast = that.convertToSphereCoords([lon+0.25, lat+0.25], 10.01);\r\n          var southEast = that.convertToSphereCoords([lon+0.25, lat-0.25], 10.01);\r\n          var southWest = that.convertToSphereCoords([lon-0.25, lat-0.25], 10.01);\r\n          vertices[offset+0] = southEast.x; vertices[offset+1] = southEast.y; vertices[offset+2] = southEast.z;\r\n          vertices[offset+3] = northEast.x; vertices[offset+4] = northEast.y; vertices[offset+5] = northEast.z;\r\n          vertices[offset+6] = northWest.x; vertices[offset+7] = northWest.y; vertices[offset+8] = northWest.z;\r\n          vertices[offset+9] = northWest.x; vertices[offset+10] = northWest.y; vertices[offset+11] = northWest.z;\r\n          vertices[offset+12] = southWest.x; vertices[offset+13] = southWest.y; vertices[offset+14] = southWest.z;\r\n          vertices[offset+15] = southEast.x; vertices[offset+16] = southEast.y; vertices[offset+17] = southEast.z;\r\n          colors[offset+0] = color[0]; colors[offset+1] = color[1]; colors[offset+2] = color[2];\r\n          colors[offset+3] = color[0]; colors[offset+4] = color[1]; colors[offset+5] = color[2];\r\n          colors[offset+6] = color[0]; colors[offset+7] = color[1]; colors[offset+8] = color[2];\r\n          colors[offset+9] = color[0]; colors[offset+10] = color[1]; colors[offset+11] = color[2];\r\n          colors[offset+12] = color[0]; colors[offset+13] = color[1]; colors[offset+14] = color[2];\r\n          colors[offset+15] = color[0]; colors[offset+16] = color[1]; colors[offset+17] = color[2];\r\n\r\n          cur++;\r\n        }\r\n      }\r\n\r\n      geometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n      geometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n      var material = new THREE.MeshBasicMaterial( { vertexColors: THREE.VertexColors, wireframe: false} );\r\n      var mesh = new THREE.Mesh( geometry, material );\r\n      that.planet.add(mesh);\r\n\r\n\r\n      geoLines.data.features = _.filter(geoLines.data.features,function(feature){\r\n        return  feature.properties.name === \"Equator\";\r\n      });\r\n\r\n      drawThreeGeo(THREE,geoLines.data, 10.03, 'sphere', {\r\n           color: 0x000\r\n       }, that.planet);\r\n\r\n      drawThreeGeo(THREE,statesResults.data, 10.03, 'sphere', {\r\n                 color: 0x000\r\n             }, that.planet);\r\n\r\n      drawThreeGeo(THREE,countryResults.data, 10.03, 'sphere', {\r\n                       color: 0x000\r\n                   }, that.planet);\r\n      that.start();\r\n    }));\r\n  }\r\n\r\n  componentWillUnmount(){\r\n      this.stop()\r\n      this.mount.removeChild(this.renderer.domElement)\r\n  }\r\n\r\n  start = () => {\r\n      if (!this.frameId) {\r\n        this.frameId = requestAnimationFrame(this.animate)\r\n      }\r\n  }\r\n\r\n  stop = () => {\r\n      cancelAnimationFrame(this.frameId)\r\n  }\r\n\r\n  animate = () => {\r\n     this.controls.update();\r\n     //this.planet.rotation.z += 0.01;\r\n     this.renderScene();\r\n     this.frameId = window.requestAnimationFrame(this.animate)\r\n   }\r\n  renderScene = () => {\r\n    this.renderer.render(this.scene, this.camera)\r\n  }\r\n\r\n  render(){\r\n      return(\r\n        <div>\r\n          <div\r\n            style={{ width: '100vw', height: '100vh' }}\r\n            ref={(mount) => { this.mount = mount }}\r\n          />\r\n          <div style={{\r\n                  position: 'absolute',\r\n                  left: '10px',\r\n                  top: '10px',\r\n                  fontSize: '1.5em'\r\n                }}>\r\n            Average annual precipitation (2001-2013)\r\n          </div>\r\n\r\n          <div style={{\r\n                  position: 'absolute',\r\n                  right: '10px',\r\n                  bottom: '10px',\r\n                  fontSize: '0.8em'\r\n                }}>\r\n              Lange, Stefan (2016): EartH2Observe, WFDEI and ERA-Interim data Merged and Bias-corrected for ISIMIP (EWEMBI). GFZ Data Services.\r\n              <a href=\"http://doi.org/10.5880/pik.2016.004\">http://doi.org/10.5880/pik.2016.004</a>\r\n          </div>\r\n\r\n          <div style={{\r\n              position: 'absolute',\r\n              left: '10px',\r\n              bottom: '10px',\r\n              fontSize: '1.5em'\r\n          }}>\r\n            {\r\n              this.state.colorBuckets.map(function(colorBucket, i){\r\n                if( colorBucket.mm === Infinity ){\r\n                  return null;\r\n                }\r\n                  return (\r\n                    <div>\r\n                      <div style={{ display: 'inline-block',\r\n                        marginRight: 5,\r\n                        marginLeft: 5,\r\n                        width: 15,\r\n                        height: 15,\r\n                        backgroundColor: 'rgb('+ colorBucket.rgb[0]*255.0 +','+ colorBucket.rgb[1]*255.0  + ','+ colorBucket.rgb[2]*255.0  + ')'\r\n                      }} ></div>\r\n\r\n                      {colorBucket.mm} mm\r\n                    </div>\r\n                  )\r\n              }, this)\r\n            }\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default GlobalScene\r\n"],"sourceRoot":""}